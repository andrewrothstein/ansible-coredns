---
- name: resolve platform specific vars
  include_vars: '{{ item }}'
  with_first_found:
    - files:
        - '{{ ansible_distribution }}-{{ ansible_distribution_release }}.yml'
        - '{{ ansible_distribution }}.yml'
        - '{{ ansible_os_family }}.yml'
      skip: true
      paths:
        - '{{ role_path }}/vars'
- name: check for install in {{ coredns_install_dir }}
  become: yes
  stat:
    path: '{{ coredns_install_dir }}'
  changed_when: False
  register: coredns_binary
- when: not coredns_binary.stat.exists
  block:
    - name: downloading {{ coredns_url }} to {{ coredns_tmp_tgz }}
      become: yes
      become_user: root
      get_url:
        url: '{{ coredns_url }}'
        dest: '{{ coredns_tmp_tgz }}'
        mode: 0644
        checksum: '{{ coredns_checksum }}'
    - name: mkdir {{ coredns_install_dir }}
      become: yes
      become_user: root
      file:
        path: '{{ coredns_install_dir }}'
        mode: 0755
        state: directory
    - name: unarchive {{ coredns_tmp_tgz }} to {{ coredns_install_dir }}
      become: yes
      become_user: root
      unarchive:
        remote_src: yes
        src: '{{ coredns_tmp_tgz }}'
        dest: '{{ coredns_install_dir }}'
        creates: '{{ coredns_install_exe }}'
  always:
    - name: rm {{ coredns_tmp_tgz }}
      become: yes
      become_user: root
      file:
        path: '{{ coredns_tmp_tgz }}'
        state: absent
- name: linking {{ coredns_link }} to {{ coredns_install_exe }}
  become: yes
  become_user: root
  file:
    src: '{{ coredns_install_exe }}'
    dest: '{{ coredns_link }}'
    state: link
